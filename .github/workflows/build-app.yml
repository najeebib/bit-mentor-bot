name: Bit mentor telegram bot

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        echo "BOT_TOKEN_DEV=${{ secrets.BOT_TOKEN_DEV }}" >> .env_dev
        echo "SERVER_URL_DEV=${{ secrets.SERVER_URL_DEV }}" >> .env_dev
        echo "GOOGLE_TIMEZONE_DEV=${{ secrets.GOOGLE_TIMEZONE_DEV }}" >> .env_dev
        echo "GOOGLE_CREDENTIALS_DEV=${{ secrets.GOOGLE_CREDENTIALS_DEV }}" >> .env_dev
        

  deploy:
    runs-on: ubuntu-latest
  
    steps:
    - name: Set up SSH for EC2
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
  
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
        set -e
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-venv
  
        if [ -d "/home/ubuntu/bit-mentor-bot" ]; then
          echo "App directory exists. Pulling latest changes."
          cd /home/ubuntu/bit-mentor-bot
          git pull origin dev
        else
          echo "App directory does not exist. Cloning repository and setting up environment."
          git clone --branch dev https://github.com/najeebib/bit-mentor-bot.git
        fi
  
        cd /home/ubuntu/bit-mentor-bot
        python3 -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        EOF

    - name: Create .env_dev file
      run: |
        echo "BOT_TOKEN_DEV=${{ secrets.BOT_TOKEN_DEV }}" >> .env_dev
        echo "SERVER_URL_DEV=${{ secrets.SERVER_URL_DEV }}" >> .env_dev
        echo "GOOGLE_TIMEZONE_DEV=${{ secrets.GOOGLE_TIMEZONE_DEV }}" >> .env_dev
        echo "GOOGLE_CREDENTIALS_DEV=${{ secrets.GOOGLE_CREDENTIALS_DEV }}" >> .env_dev

    - name: SCP .env_dev to EC2
      run: |
        scp -o StrictHostKeyChecking=no .env_dev ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/bit-mentor-bot/

    - name: Run the bot
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
        echo "Deploying the bot"
        cd /home/ubuntu/bit-mentor-bot
        source venv/bin/activate
        pkill -f "python3 -m bot.main" || true
        nohup python3 -m bot.main > /dev/null 2>&1 &
        EOF
